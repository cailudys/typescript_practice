// 类型断言
export {}; // 确保跟其他示例没有成员冲突

// 假定这个 nums 来自一个明确的接口,且明确知道必定有一个大于0的数字。
const nums = [500, 600, 700];

// ts 只是根据变量的数据类型，推断出所有可能的结果。范围比较大
// 作为开发者，明确知道一个更小的范围，所以可以使用断言，来缩小约束范围。
const res = nums.find((i) => i > 0);

// 举个例子，ts推断出一个变量可能是数字类型也可能是undefind；那么这个时候你需要用这个变量相乘，肯定语法上会提示错误。
// const square = res * res; // 会提示错误

// 那么这个时候我们就需要使用断言来标记这个变量为数字
// 断言有两种写法
const num1 = res as number; // 推荐使用
const num2 = <number>res; // jsx下不能使用
