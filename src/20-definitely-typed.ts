// 第三方模块的类型声明
export {}; // 确保跟其他示例没有成员冲突

// 1. 发现报错，提示找不到类型声明的文件。
import { camelCase } from "lodash";

// 进行类型声明（声明函数的类型）
// 就是一个函数在定义的时候由于没写原因没有进行类型声明，那么我们在使用的时候可以先对它进行类型声明
// 这种用法存在的原因就是为了兼容一些使用js写出来的模块。
// declare function camelCase(input: string): string;

const res = camelCase("hello typed");

// 大多数npm模块已经写好了对于的声明文件的模块，我们只需把鼠标移到代码中的模块上，就会自动提示对于的安装声明文件的方法。

// 很多npm模块已经在内部集成了声明文件，我们只需要安装那个应用模块就行，不需要再安装类型声明模块。（比如 query-string模块）

// 总结：
// 1.在typescript中应用第三方模块，如果这个模块中不包含对于的类型声明文件，那么我们就得尝试去安装对应的类型声明文件模块。
// 2.如果没有对应的类型声明文件可以之间安装，那么我们就需要使用declare去手动声明对应的模块类型。
